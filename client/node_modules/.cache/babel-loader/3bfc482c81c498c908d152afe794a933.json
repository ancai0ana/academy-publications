{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/ancaursachi/Documents/academy-publications/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/ancaursachi/Documents/academy-publications/client/src/QueryUsers.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      {\\n        users {\\n          id\\n          username\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nvar QueryUsers = function QueryUsers() {\n  return React.createElement(Query, {\n    query: gql(_templateObject()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, function (_ref) {\n    var loading = _ref.loading,\n        error = _ref.error,\n        data = _ref.data;\n    if (loading) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Loading...\");\n    if (error) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Error :(\");\n    console.log(data);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, data.user.id); // return data.allCourses.map(\n    //   ({ id, title, author, description, topic, url }) => (\n    //     <div key={id}>\n    //       <p>{`${title} by ${author}`}</p>\n    //     </div>\n    //   ),\n    // )\n  });\n};\n\nexport default QueryUsers;","map":{"version":3,"sources":["/Users/ancaursachi/Documents/academy-publications/client/src/QueryUsers.js"],"names":["React","Query","gql","QueryUsers","loading","error","data","console","log","user","id"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SACjB,oBAAC,KAAD;AACE,IAAA,KAAK,EAAED,GAAF,mBADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUG,gBAA8B;AAAA,QAA3BE,OAA2B,QAA3BA,OAA2B;AAAA,QAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,QAAXC,IAAW,QAAXA,IAAW;AAC7B,QAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACb,QAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACXE,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,IAAI,CAACG,IAAL,CAAUC,EAAhB,CAAP,CAJ6B,CAK7B;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAtBH,CADiB;AAAA,CAAnB;;AA0BA,eAAeP,UAAf","sourcesContent":["import React from 'react'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nconst QueryUsers = () => (\n  <Query\n    query={gql`\n      {\n        users {\n          id\n          username\n        }\n      }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <p>Loading...</p>\n      if (error) return <p>Error :(</p>\n      console.log(data)\n      return <div>{data.user.id}</div>\n      // return data.allCourses.map(\n      //   ({ id, title, author, description, topic, url }) => (\n      //     <div key={id}>\n      //       <p>{`${title} by ${author}`}</p>\n      //     </div>\n      //   ),\n      // )\n    }}\n  </Query>\n)\nexport default QueryUsers\n"]},"metadata":{},"sourceType":"module"}